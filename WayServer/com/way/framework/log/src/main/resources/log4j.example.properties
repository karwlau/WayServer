##可以设置级别：debug < info < warn < error
##debug: 显示debug, info, warn, error
##info: 显示info, warn, error
##warn: 显示warn, error
##error: 只显示error
##日志的输出级别由rootLogger和普通Logger设置的最高级别决定。
#
##log4j.rootLogger=debug,appender1
##log4j.rootLogger=info,appender1
#log4j.rootLogger=warn,appender1
##log4j.rootLogger=error,appender1
#
##输出到控制台
#log4j.appender.appender1=org.apache.log4j.ConsoleAppender
##样式为TTCCLayout
#log4j.appender.appender1.layout=org.apache.log4j.TTCCLayout
#
##这里配置的是类所在的包test.log4j, 逗号之前未配置日志输出级别，默认为根logger的级别
#log4j.logger.test.log4j=, TEST
#log4j.appender.TEST=org.apache.log4j.ConsoleAppender
#log4j.appender.TEST.layout=org.apache.log4j.TTCCLayout


######################################################################
log4j.rootLogger=info,consoleLog
#,fileLog

#appender
log4j.appender.consoleLog=org.apache.log4j.ConsoleAppender
log4j.appender.consoleLog.layout=org.apache.log4j.PatternLayout
#systemName可修改为系统名称
log4j.appender.consoleLog.layout.ConversionPattern=[%d{yyyy-MM-dd HH:mm:ss}][systemName][%p] [%c->%M(%L)] %m%n

log4j.appender.fileLog=org.apache.log4j.DailyRollingFileAppender
#group
log4j.appender.fileLog.File=/work/logs/group/systemName/localhost.log
log4j.appender.fileLog.DatePattern='.'yyyy-MM-dd
log4j.appender.fileLog.layout=org.apache.log4j.PatternLayout
log4j.appender.fileLog.layout.ConversionPattern=[%d{yyyy-MM-dd HH:mm:ss}][systemName][%p] [%c->%M(%L)] %m%n